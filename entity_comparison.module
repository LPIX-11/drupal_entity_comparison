<?php

/**
 * @file
 * Contains entity_comparison.module.
 */

use Drupal\Core\Access\AccessResult;
use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\entity_comparison\Entity\EntityComparison;

/**
 * Implements hook_help().
 */
function entity_comparison_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the entity_comparison module.
    case 'help.page.entity_comparison':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Allows user to compare entities.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_entity_bundle_field_info().
 *
 * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
 * @param $bundle
 * @param array $base_field_definitions
 * @return mixed
 */
function entity_comparison_entity_bundle_field_info(EntityTypeInterface $entity_type, $bundle, array $base_field_definitions) {

  $fields = array();

  $entity_comparisons = EntityComparison::loadByEntityTypeAndBundleType($entity_type->id(), $bundle);

  if ( !empty($entity_comparisons) ) {

    foreach($entity_comparisons as $entity_comparison) {

      // Add a field to the manage display of this entity - bundle pair
      $fields['link_for_entity_comparison_' . $entity_comparison->id()] = BaseFieldDefinition::create('entity_comparison_link')
        ->setLabel(t('Link for entity comparison'))
        ->setDescription(t('User can add or remove content to a comparison list via this link.'))
        ->setCustomStorage(TRUE)
        ->setDisplayConfigurable('form', FALSE)
        ->setDisplayOptions('view', array(
          'type' => 'entity_comparison_link',
          'label' => 'hidden',
          'weight' => 1,
          'settings' => array(
            'enitity_comparison' => $entity_comparison->id(),
          ),
        ))
        ->setDisplayConfigurable('view', TRUE);
    }
  }

  return $fields;
}

/**
 * Implements hook_theme().
 */
function entity_comparison_theme() {
  return array(
    'entity_comparison_link' => array(
      'variables' => array(
        'id' => NULL,
        'entity_comparison' => NULL,
      ),
      'function' => 'theme_entity_comparison_link',
    ),
  );
}

/**
 * Theme function for the comparison link
 *
 * @param $variables
 * @return \Drupal\Core\GeneratedLink|mixed
 */
function theme_entity_comparison_link(&$variables) {

  // Get the corresponding entity comparison entity configuration
  $entity_comparison_id = $variables['entity_comparison'];
  $entity_comparison = EntityComparison::load($entity_comparison_id);

  // Return with the link
  return $entity_comparison->getLink($variables['id']);
}

/**
 * Implements hook_entity_field_access().
 *
 * @param $operation
 * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
 * @param \Drupal\Core\Session\AccountInterface $account
 * @param \Drupal\Core\Field\FieldItemListInterface|NULL $items
 * @return \Drupal\Core\Access\AccessResult
 */
function entity_comparison_entity_field_access($operation, \Drupal\Core\Field\FieldDefinitionInterface $field_definition, \Drupal\Core\Session\AccountInterface $account, \Drupal\Core\Field\FieldItemListInterface $items = NULL) {

  if ( strpos($field_definition->getName(), 'link_for_entity_comparison_') !== FALSE && $operation == 'view') {

    $entity_comparison_id = str_replace('link_for_entity_comparison_', '', $field_definition->getName());

    return AccessResult::allowedIfHasPermission($account, "use $entity_comparison_id entity comparison");
  }

  return AccessResult::neutral();
}